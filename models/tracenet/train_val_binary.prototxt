name: "VGG_ILSVRC_16_layers"
layer {
  name: "data"
  type:	"ImageData" 
  top: "data"
  top: "label"
  top: "pos-label"
  include: { phase: TRAIN }
  image_data_param {
    source: "../image_lists/regression/train_yq21_0726.txt"
    batch_size: 1 
    shuffle: true
  }
  transform_param {
    mirror: true 
    crop_size: 224
    scale: 0.00390625
    mean_value:	85.916503093830713 
    mean_value: 85.915741930589135
    mean_value: 85.678755206959096
  }
}
layer {
  name: "data"
  type: "ImageData" 
  top: "data"
  top: "label"
  top: "pos-label"
  include: { phase: TEST }
  transform_param {
    mirror: false
    crop_size: 224
    scale: 0.00390625
    mean_value:	85.916503093830713 
    mean_value: 85.915741930589135
    mean_value: 85.678755206959096
  }
  image_data_param {
    source: "../image_lists/regression/test_south_0726.txt"
    batch_size: 24
    shuffle: true
  }
}
layer {
  name: "slice-label"
  type: "Slice"
  bottom: "label"
  top: "type-label"
  top: "binary-label"
  top: "dis-label"
  slice_param {
    slice_dim: 1
    slice_point: 1
    slice_point: 4
  }
}

layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution" 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution" 
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
#binary position branch
layer {
  bottom: "conv5_3"
  top: "conv5_4"
  name: "conv5_4"
  type: "Convolution" 
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 3 
    pad: 1
    kernel_size: 3
    weight_filler{
	    type: "xavier"
    }
    bias_filler{
	    type: "constant"
	    value: 0.2
    }
  }
}
layer {
  bottom: "conv5_4"
  top: "conv5_4"
  name: "relu5_4"
  type: "ReLU"
}
layer {
  bottom: "conv5_4"
  top: "pool6"
  name: "pool6"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 14
  }
}
#binary classification branch
layer {
  bottom: "conv5_3"
  top: "conv5_5"
  name: "conv5_5"
  type: "Convolution" 
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 1 
    pad: 1
    kernel_size: 3
    weight_filler{
	    type: "xavier"
    }
    bias_filler{
	    type: "constant"
	    value: 0.2
    }
  }
}
layer {
  bottom: "conv5_5"
  top: "conv5_5"
  name: "relu5_5"
  type: "ReLU"
}
layer {
  bottom: "conv5_5"
  top: "fcn-binary"
  name: "fcn-binary"
  type: "Convolution"
  param{
	lr_mult: 1
	decay_mult: 1
  }
  param{
	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 3
    kernel_size: 14
    weight_filler{
	    type: "xavier"
    }
    bias_filler{
	    type: "constant"
	    value: 0.2
    }
  }  
}
layer {
  bottom: "fcn-binary"
  top: "fcn-binary"
  name: "relu-binary"
  type: "ReLU"
}

#distance
layer {
  name: "dis-fcn"
  type: "Convolution"
  bottom: "conv5_3"
  top: "dis-fcn"  
  param{
    lr_mult: 1
    decay_mult: 0.1
  }
  param{
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 14
    weight_filler{
      type: "gaussian"
      std: 0.01
    }
    bias_filler{
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  top: "dis-output" 
  name: "dis-output"
  type: "Convolution"
  bottom: "dis-fcn"
   param{
    lr_mult: 1
    decay_mult: 0.1
  }
  param{
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler{
      type: "gaussian"
      std: 0.01
    }
    bias_filler{
      type: "constant"
      value: 0.0
    }
  }
}

#loss and accuracy

layer {
  bottom: "pool6"
  top: "pre-binary"
  name: "pre-binary"
  type: "Multilogistic" 
  include: {phase: TEST} 
}
layer {
  name: "accuracy"
  type: "MultiLabelAccuracy"
  bottom: "pre-binary"
  bottom: "binary-label"
  top: "accuracy" 
  top: "classaccuracy" 
  multi_label_accuracy_param{
	  prob_threshold : 0.8
	  ignore_label : 2
  }
  include: {phase: TEST}
}
layer {
  bottom: "pool6"
  bottom: "binary-label"
  top: "loss-pos"
  name: "loss-pos"
  type: "MultilogisticWithLoss"  
  loss_weight: 1 
  loss_param{
	  unknow_label : 2
  }
}
layer {
  bottom: "fcn-binary"
  bottom: "binary-label"
  top: "loss-binary"
  name: "loss-binary"
  type: "MultilogisticWithLoss"  
  loss_weight: 3 
  loss_param{
	  unknow_label : 2
  }
}
layer {
  name: "loss"
  type: "L1Loss"
  bottom: "dis-output"
  bottom: "dis-label"
  top: "loss-dis"  
  loss_weight: 1 
}
layer {
  bottom: "conv5_4"
  bottom: "pos-label"
  top: "loss-pos2"
  name: "loss-pos2"
  type: "MultilogisticWithLoss"  
  loss_weight: 1 
  loss_param{
	  unknow_label : 2
  }
}
layer {
  bottom: "pool6"
  bottom: "type-label"
  top: "loss-type"
  name: "loss-type"
  type: "SoftmaxWithLoss"
  loss_weight: 0 
  loss_param{
	  ignore_label : 3
  }
}



